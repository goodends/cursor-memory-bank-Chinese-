---
description: Comprehensive guide for calling VAN QA rules
globs: rule-calling-guide.mdc
alwaysApply: false
---
# VAN QA：综合规则调用指南

> **简要说明：** 此参考指南展示如何在验证过程中正确及时地调用所有VAN QA规则。

## 🔍 规则调用基础

记住这些关键原则：
1. 始终使用`fetch_rules`工具加载规则
2. 使用精确的规则路径
3. 仅在需要时加载组件

## 📋 主要QA入口点

当用户输入"VAN QA"时，加载主入口点：

```
fetch_rules with "isolation_rules/visual-maps/van-qa-main"
```

## 📋 验证检查

在验证期间按顺序加载这些组件：

```
1. fetch_rules with "isolation_rules/visual-maps/van-qa-checks/dependency-check"
2. fetch_rules with "isolation_rules/visual-maps/van-qa-checks/config-check"
3. fetch_rules with "isolation_rules/visual-maps/van-qa-checks/environment-check"
4. fetch_rules with "isolation_rules/visual-maps/van-qa-checks/build-test"
```

## 📋 实用组件

根据验证结果在需要时加载这些：

```
- 报告：fetch_rules with "isolation_rules/visual-maps/van-qa-utils/reports"
- 修复：fetch_rules with "isolation_rules/visual-maps/van-qa-utils/common-fixes"
- 转换：fetch_rules with "isolation_rules/visual-maps/van-qa-utils/mode-transitions"
```

## ⚠️ 关键提醒

记住在这些特定时点调用这些规则：
- 输入"VAN QA"时始终加载主QA入口点
- 开始验证前始终加载dependency-check
- 完成验证后始终加载reports
- 验证成功后始终加载mode-transitions
- 验证失败后始终加载common-fixes

## 🔄 完整验证序列

QA验证过程的完整序列：

1. 加载主入口：`isolation_rules/visual-maps/van-qa-main`
2. 加载第一检查：`isolation_rules/visual-maps/van-qa-checks/dependency-check`
3. 加载第二检查：`isolation_rules/visual-maps/van-qa-checks/config-check`
4. 加载第三检查：`isolation_rules/visual-maps/van-qa-checks/environment-check`
5. 加载第四检查：`isolation_rules/visual-maps/van-qa-checks/build-test`
6. 如果通过，加载：`isolation_rules/visual-maps/van-qa-utils/reports`
7. 如果通过，加载：`isolation_rules/visual-maps/van-qa-utils/mode-transitions`
8. 如果失败，加载：`isolation_rules/visual-maps/van-qa-utils/common-fixes` 