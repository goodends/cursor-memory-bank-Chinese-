---
description: Utility for VAN QA validation reports
globs: reports.mdc
alwaysApply: false
---
# VAN QA：验证报告

> **简要说明：** 此组件包含QA验证过程完成后生成的综合成功和失败报告的格式。

## 📋 综合成功报告格式

所有四个验证点通过后，生成此成功报告：

```
╔═════════════════════ 🔍 QA验证报告 ══════════════════════╗
│ 项目：[项目名称] | 时间戳：[当前日期/时间]                    │
├─────────────────────────────────────────────────────────────────────┤
│ 1️⃣ 依赖：✓ 兼容                                                    │
│ 2️⃣ 配置：✓ 有效且兼容                                              │
│ 3️⃣ 环境：✓ 就绪                                                    │
│ 4️⃣ 最小构建：✓ 成功且通过                                          │
├─────────────────────────────────────────────────────────────────────┤
│ 🚨 最终结论：通过                                                   │
│ ➡️ 可以进入BUILD模式                                               │
╚═════════════════════════════════════════════════════════════════════╝
```

### 成功报告生成示例：
```powershell
function Generate-SuccessReport {
    param (
        [string]$ProjectName = "当前项目"
    )
    
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    
    $report = @"
╔═════════════════════ 🔍 QA验证报告 ══════════════════════╗
│ 项目：$ProjectName | 时间戳：$timestamp            │
├─────────────────────────────────────────────────────────────────────┤
│ 1️⃣ 依赖：✓ 兼容                                                    │
│ 2️⃣ 配置：✓ 有效且兼容                                              │
│ 3️⃣ 环境：✓ 就绪                                                    │
│ 4️⃣ 最小构建：✓ 成功且通过                                          │
├─────────────────────────────────────────────────────────────────────┤
│ 🚨 最终结论：通过                                                   │
│ ➡️ 可以进入BUILD模式                                               │
╚═════════════════════════════════════════════════════════════════════╝
"@
    
    # 保存验证状态（由BUILD模式防护机制使用）
    "PASS" | Set-Content -Path "memory-bank\.qa_validation_status"
    
    return $report
}
```

## ❌ 失败报告格式

如果任何验证步骤失败，生成此详细失败报告：

```
⚠️⚠️⚠️ QA验证失败 ⚠️⚠️⚠️

在进入BUILD模式之前必须解决以下问题：

1️⃣ 依赖问题：
- [依赖问题的详细描述]
- [推荐修复方法]

2️⃣ 配置问题：
- [配置问题的详细描述]
- [推荐修复方法]

3️⃣ 环境问题：
- [环境问题的详细描述]
- [推荐修复方法]

4️⃣ 构建测试问题：
- [构建测试问题的详细描述]
- [推荐修复方法]

⚠️ BUILD模式被阻止，直到这些问题得到解决。
修复问题后输入'VAN QA'重新验证。
```

### 失败报告生成示例：
```powershell
function Generate-FailureReport {
    param (
        [string[]]$DependencyIssues = @(),
        [string[]]$ConfigIssues = @(),
        [string[]]$EnvironmentIssues = @(),
        [string[]]$BuildIssues = @()
    )
    
    $report = @"
⚠️⚠️⚠️ QA验证失败 ⚠️⚠️⚠️

在进入BUILD模式之前必须解决以下问题：

"@
    
    if ($DependencyIssues.Count -gt 0) {
        $report += @"
1️⃣ 依赖问题：
$(($DependencyIssues | ForEach-Object { "- $_" }) -join "`n")

"@
    }
    
    if ($ConfigIssues.Count -gt 0) {
        $report += @"
2️⃣ 配置问题：
$(($ConfigIssues | ForEach-Object { "- $_" }) -join "`n")

"@
    }
    
    if ($EnvironmentIssues.Count -gt 0) {
        $report += @"
3️⃣ 环境问题：
$(($EnvironmentIssues | ForEach-Object { "- $_" }) -join "`n")

"@
    }
    
    if ($BuildIssues.Count -gt 0) {
        $report += @"
4️⃣ 构建测试问题：
$(($BuildIssues | ForEach-Object { "- $_" }) -join "`n")

"@
    }
    
    $report += @"
⚠️ BUILD模式被阻止，直到这些问题得到解决。
修复问题后输入'VAN QA'重新验证。
"@
    
    # 保存验证状态（由BUILD模式防护机制使用）
    "FAIL" | Set-Content -Path "memory-bank\.qa_validation_status"
    
    return $report
}
```

**下一步（成功时）：** 加载`van-qa-utils/mode-transitions.mdc`处理BUILD模式转换。
**下一步（失败时）：** 加载`van-qa-utils/common-fixes.mdc`获取问题修复指导。 