---
description: Comprehensive workflow for Level 4 Complex System tasks
globs: workflow-level4.mdc
alwaysApply: false
---
# 四级任务综合工作流程

> **简要说明：** 本文档概述了四级（复杂系统）任务的综合工作流程，包括7个关键阶段，具有严格的规划、强制性创意阶段、架构设计、分阶段实施和广泛的文档记录。

## 🔍 四级工作流程概述

```mermaid
graph LR
    Init["1. 初始化"] --> Doc["2. 文档<br>设置"]
    Doc --> Plan["3. 架构<br>规划"]
    Plan --> Create["4. 创意<br>阶段"]
    Create --> Impl["5. 分阶段<br>实施"]
    Impl --> Reflect["6. 反思"]
    Reflect --> Archive["7. 归档"]
    
    %% Document connections for each phase
    Init -.-> InitDocs["初始化"]
    Doc -.-> DocDocs["文档记录"]
    Plan -.-> PlanDocs["架构规划"]
    Create -.-> CreateDocs["创意阶段"]
    Impl -.-> ImplDocs["分阶段实施"]
    Reflect -.-> ReflectDocs["反思"]
    Archive -.-> ArchiveDocs["归档"]
```

## 🔄 级别转换处理

```mermaid
graph TD
    L4["四级任务"] --> Assess["持续<br>评估"]
    
    Assess --> Down["降级到<br>二级/三级"]
    Assess --> Split["拆分为<br>多个任务"]
    
    Down --> L23Trigger["触发条件:<br>- 复杂度较低<br>- 范围有限<br>- 组件较少"]
    
    Split --> MultiTrigger["触发条件:<br>- 过于庞大<br>- 独立部分<br>- 可并行处理"]
    
    L23Trigger --> L23Switch["切换到<br>二级/三级工作流程"]
    MultiTrigger --> CreateTasks["创建多个<br>低级别任务"]
```

四级任务涉及需要综合规划、严格设计、系统实施和彻底文档记录的复杂系统。此工作流程确保以适当的详细程度、结构和验证来处理所有方面。

## 📋 工作流程阶段

### 阶段1：初始化

```mermaid
graph TD
    Start["开始四级任务"] --> Platform{"检测<br>平台"}
    Platform --> FileCheck["关键文件<br>验证"]
    FileCheck --> LoadStructure["综合记忆<br>库结构加载"]
    LoadStructure --> TaskCreation["创建详细<br>任务框架"]
    TaskCreation --> Context["建立企业<br>上下文"]
    Context --> Resources["识别和分配<br>所有资源"]
    Resources --> SetupComplete["初始化<br>完成"]
```

**步骤：**
1. 平台检测与综合环境配置
2. 关键文件验证与深度完整性检查
3. 综合记忆库结构加载与完整引用映射
4. 在tasks.md中创建详细任务框架与完整结构
5. 建立完整的企业上下文和利益相关者需求
6. 识别和分配所有必要资源（技术、人力、时间）
7. 执行系统就绪性评估

**里程碑检查点：**
```
✓ 初始化检查点
- 平台检测并完全配置？ [是/否]
- 关键文件验证并完整性检查？ [是/否]
- 记忆库综合加载并映射？ [是/否]
- 详细任务框架创建？ [是/否]
- 企业上下文建立？ [是/否]
- 利益相关者需求文档化？ [是/否]
- 所有资源识别并分配？ [是/否]
- 系统就绪性评估？ [是/否]

→ 如果全部为是：进入文档设置
→ 如果任何为否：完成初始化步骤
```

### 阶段2：文档设置

```mermaid
graph TD
    Start["开始文档<br>设置"] --> LoadTemplate["加载综合<br>文档模板"]
    LoadTemplate --> Framework["建立文档<br>框架"]
    Framework --> UpdateProject["更新<br>projectbrief.md"]
    UpdateProject --> UpdateContext["更新<br>activeContext.md"]
    UpdateContext --> SystemPatterns["更新<br>systemPatterns.md"]
    SystemPatterns --> TechContext["更新<br>techContext.md"]
    TechContext --> Standards["文档化系统<br>标准"]
    Standards --> Architecture["文档化现有<br>架构"]
    Architecture --> SetupComplete["文档设置<br>完成"]
```

**步骤：**
1. 为所有方面加载综合文档模板
2. 建立完整的文档框架与结构
3. 用详细的系统描述和需求更新projectbrief.md
4. 用当前焦点、依赖关系和利益相关者更新activeContext.md
5. 用综合模式和原则更新systemPatterns.md
6. 用完整的技术景观更新techContext.md
7. 文档化系统标准、约束和约定
8. 文档化现有架构和集成点

**里程碑检查点：**
```
✓ 文档检查点
- 文档模板加载？ [是/否]
- 文档框架建立？ [是/否]
- projectbrief.md综合更新？ [是/否]
- activeContext.md完全更新？ [是/否]
- systemPatterns.md综合更新？ [是/否]
- techContext.md完全更新？ [是/否]
- 系统标准文档化？ [是/否]
- 现有架构文档化？ [是/否]

→ 如果全部为是：进入架构规划
→ 如果任何为否：完成文档设置
```

### 阶段3：架构规划

```mermaid
graph TD
    Start["开始架构<br>规划"] --> Requirements["分析综合<br>需求"]
    Requirements --> BusinessContext["文档化业务<br>上下文"]
    BusinessContext --> VisionDefine["定义愿景<br>和目标"]
    VisionDefine --> ArchitecturalPrinciples["建立架构<br>原则"]
    ArchitecturalPrinciples --> Alternatives["探索架构<br>替代方案"]
    Alternatives --> Evaluation["执行详细<br>评估"]
    Evaluation --> Selection["进行架构<br>选择"]
    Selection --> Documentation["创建架构<br>文档"]
    Documentation --> Review["进行架构<br>审查"]
    Review --> PlanComplete["架构规划<br>完成"]
```

**步骤：**
1. 分析具有可追溯性的综合需求
2. 文档化完整的业务上下文和约束
3. 定义具有可衡量目标的清晰愿景和目标
4. 建立架构原则和非功能性需求
5. 通过彻底分析探索多个架构替代方案
6. 使用加权标准执行详细评估
7. 进行具有综合论证的架构选择
8. 创建带有图表的完整架构文档
9. 与利益相关者进行正式架构审查

**里程碑检查点：**
```
✓ 架构规划检查点
- 需求综合分析？ [是/否]
- 业务上下文完全文档化？ [是/否]
- 愿景和目标清晰定义？ [是/否]
- 架构原则建立？ [是/否]
- 替代方案彻底探索？ [是/否]
- 详细评估执行？ [是/否]
- 架构选择论证？ [是/否]
- 架构文档完成？ [是/否]
- 架构审查进行？ [是/否]

→ 如果全部为是：进入创意阶段
→ 如果任何为否：完成架构规划
```

### 阶段4：创意阶段

```mermaid
graph TD
    Start["开始创意<br>阶段"] --> IdentifyNeeds["识别创意<br>阶段需求"]
    IdentifyNeeds --> Architecture["架构<br>设计阶段"]
    Architecture --> Algorithm["算法<br>设计阶段"]
    Algorithm --> UIUX["UI/UX<br>设计阶段"]
    UIUX --> Integration["集成<br>设计阶段"]
    Integration --> Security["安全<br>设计阶段"]
    Security --> Performance["性能<br>设计阶段"]
    Performance --> Resilience["弹性<br>设计阶段"]
    Resilience --> Documentation["综合<br>设计文档"]
    Documentation --> Review["设计<br>审查"]
    Review --> CreativeComplete["创意阶段<br>完成"]
```

**步骤：**
1. 基于系统需求识别所有必需的创意阶段
2. 执行具有模式和原则的综合架构设计
3. 为所有复杂流程进行彻底的算法设计
4. 通过用户研究和测试执行详细的UI/UX设计
5. 为所有系统接口创建集成设计
6. 通过威胁建模开发安全设计
7. 通过容量规划进行性能设计
8. 通过故障模式和恢复规划弹性
9. 为所有方面创建综合设计文档
10. 与利益相关者进行正式设计审查

**里程碑检查点：**
```
✓ 创意阶段检查点
- 所有必需的创意阶段识别？ [是/否]
- 架构设计完成并包含模式？ [是/否]
- 为复杂流程进行算法设计？ [是/否]
- 通过用户研究执行UI/UX设计？ [是/否]
- 为接口创建集成设计？ [是/否]
- 通过威胁建模开发安全设计？ [是/否]
- 通过容量规划完成性能设计？ [是/否]
- 通过故障模式规划弹性设计？ [是/否]
- 创建综合设计文档？ [是/否]
- 进行正式设计审查？ [是/否]

→ 如果全部为是：进入分阶段实施
→ 如果任何为否：完成创意阶段
```

### 阶段5：分阶段实施

```mermaid
graph TD
    Start["开始分阶段<br>实施"] --> PrepEnv["准备综合<br>实施环境"]
    PrepEnv --> Framework["建立实施<br>框架"]
    Framework --> RoadmapDefine["定义实施<br>路线图"]
    RoadmapDefine --> PhaseImplementation["实施<br>顺序阶段"]
    PhaseImplementation --> PhaseVerification["验证每个<br>阶段"]
    PhaseVerification --> Integration["执行集成<br>测试"]
    Integration --> SystemTest["进行系统<br>测试"]
    SystemTest --> UAT["用户验收<br>测试"]
    UAT --> Stabilization["系统<br>稳定化"]
    Stabilization --> ImplComplete["实施<br>完成"]
```

**步骤：**
1. 准备包含所有工具的综合实施环境
2. 建立包含标准和流程的实施框架
3. 定义包含阶段和依赖关系的详细实施路线图
4. 通过里程碑验证实施顺序阶段
5. 根据需求和设计验证每个阶段
6. 跨阶段执行综合集成测试
7. 对完整解决方案进行彻底的系统测试
8. 与利益相关者执行正式用户验收测试
9. 执行系统稳定化和性能调优
10. 文档化所有实施细节和部署程序

**里程碑检查点：**
```
✓ 分阶段实施检查点
- 实施环境完全准备？ [是/否]
- 实施框架建立？ [是/否]
- 详细路线图定义并包含阶段？ [是/否]
- 所有阶段顺序实施？ [是/否]
- 每个阶段根据需求验证？ [是/否]
- 综合集成测试执行？ [是/否]
- 彻底系统测试进行？ [是/否]
- 用户验收测试执行？ [是/否]
- 系统稳定化完成？ [是/否]
- 实施细节文档化？ [是/否]

→ 如果全部为是：进入反思
→ 如果任何为否：完成实施步骤
```

### 阶段6：反思

```mermaid
graph TD
    Start["开始<br>反思"] --> Template["加载综合<br>反思模板"]
    Template --> SystemReview["完成系统<br>审查"]
    SystemReview --> Process["分析流程<br>有效性"]
    Process --> Success["文档化成功<br>与证据"]
    Success --> Challenges["文档化挑战<br>与解决方案"]
    Challenges --> TechnicalInsights["提取战略<br>技术洞察"]
    TechnicalInsights --> ProcessInsights["提取流程<br>改进洞察"]
    ProcessInsights --> BusinessInsights["文档化业务<br>影响"]
    BusinessInsights --> StrategicActions["定义战略<br>行动项目"]
    StrategicActions --> ReflectComplete["反思<br>完成"]
```

**步骤：**
1. 加载包含所有部分的综合反思模板
2. 根据原始目标进行完整系统审查
3. 通过指标分析流程有效性
4. 用具体证据和影响文档化成功
5. 用实施的解决方案和经验教训文档化挑战
6. 为企业知识提取战略技术洞察
7. 为未来项目提取流程改进洞察
8. 文档化业务影响和交付的价值
9. 定义具有优先级的战略行动项目
10. 创建综合反思文档

**里程碑检查点：**
```
✓ 反思检查点
- 综合反思模板加载？ [是/否]
- 完整系统审查进行？ [是/否]
- 流程有效性分析？ [是/否]
- 成功用证据文档化？ [是/否]
- 挑战用解决方案文档化？ [是/否]
- 战略技术洞察提取？ [是/否]
- 流程改进洞察提取？ [是/否]
- 业务影响文档化？ [是/否]
- 战略行动项目定义？ [是/否]
- 综合反思文档创建？ [是/否]

→ 如果全部为是：进入归档
→ 如果任何为否：完成反思步骤
```

### 阶段7：归档

```mermaid
graph TD
    Start["开始<br>归档"] --> Template["加载综合<br>归档模板"]
    Template --> SystemDoc["创建系统<br>文档"]
    SystemDoc --> Architecture["文档化最终<br>架构"]
    Architecture --> Design["编译设计<br>决策"]
    Design --> Implementation["文档化实施<br>细节"]
    Implementation --> Testing["编译测试<br>文档"]
    Testing --> Deployment["创建部署<br>文档"]
    Deployment --> Maintenance["准备维护<br>指南"]
    Maintenance --> Knowledge["向利益相关者<br>转移知识"]
    Knowledge --> Archive["创建综合<br>归档包"]
    Archive --> ArchiveComplete["归档<br>完成"]
```

**步骤：**
1. 加载包含所有部分的综合归档模板
2. 创建包含所有方面的完整系统文档
3. 用图表和理由文档化最终架构
4. 编译所有设计决策与论证
5. 用技术细节文档化所有实施细节
6. 编译包含结果的综合测试文档
7. 创建包含程序的详细部署文档
8. 准备包含操作程序的维护指南
9. 通过培训向所有利益相关者转移知识
10. 创建包含所有工件的综合归档包

**里程碑检查点：**
```
✓ 归档检查点
- 综合归档模板加载？ [是/否]
- 完整系统文档创建？ [是/否]
- 最终架构文档化？ [是/否]
- 设计决策编译？ [是/否]
- 实施细节文档化？ [是/否]
- 测试文档编译？ [是/否]
- 部署文档创建？ [是/否]
- 维护指南准备？ [是/否]
- 知识转移给利益相关者？ [是/否]
- 综合归档包创建？ [是/否]

→ 如果全部为是：任务完成
→ 如果任何为否：完成归档步骤
```

## 📋 工作流程验证检查清单

```
✓ 最终工作流程验证
- 所有7个阶段完成？ [是/否]
- 所有里程碑检查点通过？ [是/否]
- 架构规划正确执行？ [是/否]
- 所有必需的创意阶段完成？ [是/否]
- 实施按适当阶段执行？ [是/否]
- 综合反思进行？ [是/否]
- 完整系统文档归档？ [是/否]
- 记忆库完全更新？ [是/否]
- 知识成功转移？ [是/否]

→ 如果全部为是：四级任务成功完成
→ 如果任何为否：处理未完成项目
```

## 📋 最小模式工作流程

对于最小模式，使用此简化工作流程，同时保留关键要素：

```
1. 初始化：验证环境，创建结构化任务框架，建立上下文
2. 文档：更新所有记忆库文档，文档化标准和架构
3. 规划：定义包含原则、替代方案、评估、选择的架构
4. 创意：执行所有必需的创意阶段并文档化
5. 实施：分阶段实施并验证、集成、测试
6. 反思：文档化成功、挑战、洞察和战略行动
7. 归档：创建综合文档和知识转移
```

## 🔄 与记忆库的集成

此工作流程与记忆库综合集成：

```mermaid
graph TD
    Workflow["四级<br>工作流程"] --> PB["综合更新<br>projectbrief.md"]
    Workflow --> AC["详细更新<br>activeContext.md"]
    Workflow --> SP["战略更新<br>systemPatterns.md"]
    Workflow --> TC["完整更新<br>techContext.md"]
    Workflow --> TM["结构化维护<br>tasks.md"]
    Workflow --> PM["企业更新<br>progress.md"]
    
    PB --> Archive["归档<br>文档"]
    AC --> Archive
    SP --> Archive
    TC --> Archive
    TM --> Archive
    PM --> Archive
```

## 🚨 LEVEL 4 GOVERNANCE PRINCIPLE

Remember:

```
┌─────────────────────────────────────────────────────┐
│ Level 4 tasks represent ENTERPRISE-CRITICAL work.   │
│ RIGOROUS governance, comprehensive documentation,   │
│ and thorough verification are MANDATORY at each     │
│ phase. NO EXCEPTIONS.                               │
└─────────────────────────────────────────────────────┘
```

This ensures that complex systems are designed, implemented, and documented to the highest standards, with enterprise-grade quality and governance. 