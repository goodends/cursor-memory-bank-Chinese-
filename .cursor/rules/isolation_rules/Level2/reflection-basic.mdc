---
description: Basic reflection format for Level 2 Simple Enhancement tasks
globs: "**/level2/**", "**/reflection/**"
alwaysApply: false
---
# 级别2任务的基本反思

> **简要说明：** 本文档概述了级别2（简单增强）任务的基本反思方法，确保在不产生不必要开销的情况下捕获关键见解和经验教训。

## 🔍 反思概述

反思对于改进未来工作至关重要，即使对于较简单的级别2增强也是如此。这种基本反思方法专注于关键结果、挑战和经验教训，同时保持效率。

## 📋 反思原则

1. **诚实性**: 准确表示成功和挑战
2. **具体性**: 包含具体示例和观察
3. **洞察力**: 超越表面观察，得出有用见解
4. **改进**: 专注于未来工作的可行收获
5. **效率**: 保持反思简洁，专注于关键学习

## 📋 基本反思结构

```markdown
# 级别2增强反思: [功能名称]

## 增强摘要
[增强的简要一段摘要]

## 进展顺利的方面
- [具体成功点 1]
- [具体成功点 2]
- [具体成功点 3]

## 遇到的挑战
- [具体挑战 1]
- [具体挑战 2]
- [具体挑战 3]

## 应用的解决方案
- [挑战1的解决方案]
- [挑战2的解决方案]
- [挑战3的解决方案]

## 关键技术见解
- [技术见解 1]
- [技术见解 2]
- [技术见解 3]

## 流程见解
- [流程见解 1]
- [流程见解 2]
- [流程见解 3]

## 未来工作的行动项目
- [具体行动项目 1]
- [具体行动项目 2]
- [具体行动项目 3]

## 时间估算准确性
- 估算时间: [X小时/天]
- 实际时间: [Y小时/天]
- 差异: [Z%]
- 差异原因: [简要解释]
```

## 📋 反思质量

级别2任务的高质量反思应该：

1. **提供具体示例**而不是模糊陈述
2. **识别具体收获**而不是一般观察
3. **将挑战与解决方案联系**并有清晰推理
4. **分析估算准确性**以改进未来规划
5. **产生可行的改进**用于未来工作

## 📋 反思流程

按照这些步骤进行有效的级别2任务反思：

1. **安排反思**:
   - 为反思分配专门时间
   - 在任务完成后24小时内完成反思

2. **收集信息**:
   - 回顾原始任务需求
   - 检查实现细节
   - 考虑遇到的挑战
   - 回顾时间跟踪数据

3. **完成模板**:
   - 填写反思模板的所有部分
   - 包含具体、具体的示例
   - 对挑战要诚实

4. **提取见解**:
   - 识别挑战中的模式
   - 将挑战与潜在的未来改进联系
   - 考虑流程改进

5. **记录行动项目**:
   - 创建具体、可行的改进
   - 在适用的地方将这些链接到未来任务

6. **存储反思**:
   - 将反思与任务归档一起保存
   - 向相关文档添加交叉引用

## 📋 示例: 模糊vs具体条目

### ❌ 模糊条目（不充分）

- "实现进展顺利。"
- "我们在代码方面遇到了一些挑战。"
- "功能按预期工作。"

### ✅ 具体条目（充分）

- "模块化方法允许与现有代码库轻松集成，特别是UI层和数据处理逻辑之间的清晰分离。"
- "挑战：处理多个用户交互时状态管理变得复杂。解决方案：实现了更结构化的reducer模式，具有清晰的操作和状态转换。"
- "行动项目：为文件选择创建可重用组件，处理我们在此实现中遇到的所有边缘情况。"

## 📋 反思验证检查清单

```
✓ 反思验证
- 所有模板部分已完成? [是/否]
- 提供了具体示例? [是/否]
- 诚实地处理了挑战? [是/否]
- 记录了具体解决方案? [是/否]
- 产生了可行见解? [是/否]
- 分析了时间估算? [是/否]

→ 如果全部是: 反思完成
→ 如果有否: 改进反思质量
```

## 📋 最小模式反思

对于最小模式，使用此格式：

```
✓ 反思: [功能名称]
✓ 进展顺利: [关键成功]
✓ 挑战: [关键挑战]
✓ 解决方案: [关键解决方案]
✓ 见解: [最重要的收获]
✓ 行动: [最高优先级行动项目]
✓ 时间: 估算[X] vs. 实际[Y] ([Z%]差异)
```

## 🔄 与Memory Bank的集成

反思与Memory Bank集成：

```mermaid
graph TD
    Reflection["增强<br>反思"] --> Archive["添加到<br>归档"]
    Reflection --> ProgressUpdate["更新<br>progress.md"]
    Reflection --> ActionItems["记录<br>行动项目"]
    
    ActionItems --> Tasks["添加到<br>tasks.md"]
    Archive & ProgressUpdate & Tasks --> CrossLinks["创建<br>交叉链接"]
```

## 🚨 持续改进原则

记住：

```
┌─────────────────────────────────────────────────────┐
│ 每次反思都应该为未来工作产生至少一个                 │
│ 可行的改进。                                       │
└─────────────────────────────────────────────────────┘
```

这确保反思直接有助于产品和流程的持续改进。 